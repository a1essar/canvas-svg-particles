{"version":3,"sources":["../src/Canvas/createCanvas.ts","../src/Canvas/index.ts","../src/Scene/Scene.ts","../src/Scene/SceneResizer.ts","../src/Scene/index.ts","../src/Loop/Loop.ts","../src/Loop/index.ts","../src/Particles/BackgroundParticle.ts","../src/Particles/BackgroundParticles.ts","../src/heplers/number.ts","../src/heplers/easing.ts","../src/Particles/FigureParticle.ts","../src/heplers/svg.ts","../src/heplers/object.ts","../src/heplers/function.ts","../src/Particles/FigureParticles.ts","../src/Particles/ParticlesConnections.ts","../src/Particles/ParticlesRenderLoop.ts","../src/Particles/index.ts","../src/heplers/string.ts","../src/heplers/point.ts","../src/Connections/Connection.ts","../src/Connections/index.ts","../src/main.ts","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"main.62d00c9e.js","sourceRoot":"../sample","sourcesContent":["type Options = {\n    width: number,\n    height: number,\n    zIndex: string,\n}\n\nfunction createCanvas(root: HTMLElement, options: Options): HTMLCanvasElement {\n    const {\n        width,\n        height,\n        zIndex\n    } = options;\n    const canvas = document.createElement('canvas');\n    canvas.id = 'canvas';\n    canvas.width = width;\n    canvas.height = height;\n    canvas.style.position = 'absolute';\n    canvas.style.zIndex = zIndex;\n    root.appendChild(canvas);\n    return canvas;\n}\n\nexport {\n    createCanvas,\n}\n","export * from './createCanvas';\n","import { createCanvas } from '../Canvas';\n\ntype SceneSize = {\n    width: number,\n    height: number,\n};\n\ntype Options = {\n    backgroundColor: string,\n};\n\nclass Scene {\n    private readonly canvas: HTMLCanvasElement;\n    public context: CanvasRenderingContext2D;\n    public size: SceneSize = {\n        width: 0,\n        height: 0,\n    };\n\n    constructor(\n        private readonly root: HTMLElement,\n        private readonly zIndex: number,\n        private readonly options: Options,\n    ) {\n        this.updateSize();\n        this.canvas = this.createCanvas(this.zIndex);\n        this.context = this.canvas.getContext('2d', { alpha: false });\n        this.clear();\n    }\n\n    clear(): void {\n        this.context.fillStyle = this.options.backgroundColor;\n        this.context.fillRect(0,0, this.size.width, this.size.height);\n    }\n\n    destroy(): void {\n        this.canvas.remove();\n    }\n\n    public updateCanvasSize(): void {\n        this.updateSize();\n        this.canvas.height = this.size.height;\n        this.canvas.width = this.size.width;\n    }\n\n    private updateSize(): void {\n        const {\n            width,\n            height,\n        } = this.root.getBoundingClientRect();\n\n        this.size.width = width;\n        this.size.height = height;\n    }\n\n    private createCanvas(zIndex = 0): HTMLCanvasElement {\n        return createCanvas(this.root, {\n            width: this.size.width,\n            height: this.size.height,\n            zIndex: String(zIndex),\n        });\n    }\n}\n\nexport {\n    Scene,\n}\n","interface ISceneSizeUpdater {\n    updateCanvasSize(): void;\n}\n\nclass SceneResizer {\n   constructor(\n       private readonly scene: ISceneSizeUpdater,\n   ) {\n       window.addEventListener('resize', this.updateSize);\n   }\n\n   public destroy(): void {\n       window.removeEventListener('resize', this.updateSize);\n   }\n\n   private readonly updateSize = (): void => {\n       this.scene.updateCanvasSize();\n   }\n}\n\nexport {\n    SceneResizer,\n}\n","export * from './Scene';\nexport * from './SceneResizer';\n","class Loop {\n    private id: number;\n    private callback: () => void;\n\n    start(callback: () => void): void {\n        this.callback = callback;\n        this.draw();\n    }\n\n    stop(): void {\n        cancelAnimationFrame(this.id);\n    }\n\n    private readonly draw = () => {\n        this.callback();\n        this.id = requestAnimationFrame(this.draw);\n    }\n}\n\nexport {\n    Loop,\n}\n","export * from './Loop'\n","import { IParticle, IParticleWithPoint, ParticleOptions } from './index';\n\ntype Options = {\n    radius: number,\n} & ParticleOptions;\n\nclass BackgroundParticle implements IParticle, IParticleWithPoint {\n    private x: number;\n    private y: number;\n    private dx: number;\n    private dy: number;\n    private readonly endAngle = Number((Math.PI * 2).toFixed(2));\n\n    constructor(\n        private readonly bound: {\n            width: number,\n            height: number,\n        },\n        private readonly options: Options,\n    ) {\n        this.x = Math.random() * this.bound.width;\n        this.y = Math.random() * this.bound.height;\n        this.dx = -1 + Math.random() * 2;\n        this.dy = -1 + Math.random() * 2;\n    }\n\n    draw(context: CanvasRenderingContext2D) {\n        context.fillStyle = this.options.color;\n        context.beginPath();\n        context.arc(\n            Number(this.x.toFixed(2)),\n            Number(this.y.toFixed(2)),\n            Math.round(this.options.radius),\n            0,\n            this.endAngle,\n            false\n        );\n        context.fill();\n        this.move();\n    }\n\n    getPoint(): { readonly x: number; readonly y: number } {\n        return {\n            x: this.x,\n            y: this.y,\n        }\n    }\n\n    private move() {\n        this.x += this.dx;\n        this.y += this.dy;\n\n        if (this.x + this.options.radius > this.bound.width) {\n            this.x = this.options.radius;\n        } else if(this.x - this.options.radius < 0) {\n            this.x = this.bound.width - this.options.radius;\n        }\n\n        if (this.y + this.options.radius > this.bound.height) {\n            this.y = this.options.radius;\n        } else if(this.y - this.options.radius < 0) {\n            this.y = this.bound.height - this.options.radius;\n        }\n    }\n}\n\nexport {\n    BackgroundParticle,\n}\n","import {IParticle, BackgroundParticle} from './index'\n\ntype Options = {\n    count: number,\n    radius: number,\n    color: string,\n};\n\nclass BackgroundParticles {\n    private particles: IParticle[] = [];\n\n    constructor(\n        private readonly context: CanvasRenderingContext2D,\n        private readonly bound: {\n            width: number,\n            height: number,\n        },\n        private readonly options: Options,\n    ) {\n        this.update();\n    }\n\n    draw(): void {\n        this.particles.map((particle, i) => {\n            particle.draw(this.context);\n        });\n    }\n\n    update(): void {\n        this.updateParticlesCount();\n    }\n\n    getPoints(): {readonly x: number, readonly y: number}[] {\n        return this.particles.map((particle) => particle.getPoint())\n    }\n\n    private updateParticlesCount(): void {\n        const count = Math.round(this.options.count);\n        if (count <= 0) {\n            this.particles = [];\n        } else if (this.particles.length > count) {\n            this.particles = this.particles.slice(0, this.particles.length - count);\n        } else if (this.particles.length < count) {\n            for (let i = 0; i <= count - this.particles.length; i++) {\n                this.particles.push(\n                    new BackgroundParticle(\n                        this.bound,\n                        this.options,\n                    )\n                );\n            }\n        }\n    }\n}\n\nexport {\n    BackgroundParticles,\n}\n","function getRandomInt(max: number, min = 0) {\n    return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nexport {\n    getRandomInt,\n}\n","// https://easings.net/\nexport enum Easings {\n    easeOutBack = 'easeOutBack',\n    easeInCubic = 'easeInCubic',\n    easeOutBounce = 'easeOutBounce',\n    easeInBounce = 'easeInBounce',\n}\n\nexport const easing: {[k in Easings]: (x: number) => number} = {\n    [Easings.easeOutBack]: function (x: number): number {\n        const c1 = 1.70158;\n        const c3 = c1 + 1;\n\n        return 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2);\n    },\n    [Easings.easeInCubic]: function (x: number): number {\n        return x * x * x;\n    },\n    [Easings.easeOutBounce]: function (x: number): number {\n        const n1 = 7.5625;\n        const d1 = 2.75;\n\n        if (x < 1 / d1) {\n            return n1 * x * x;\n        } else if (x < 2 / d1) {\n            return n1 * (x -= 1.5 / d1) * x + 0.75;\n        } else if (x < 2.5 / d1) {\n            return n1 * (x -= 2.25 / d1) * x + 0.9375;\n        } else {\n            return n1 * (x -= 2.625 / d1) * x + 0.984375;\n        }\n    },\n    [Easings.easeInBounce]: function (x: number): number {\n        return 1 - this[Easings.easeOutBounce](1 - x);\n    }\n};\n","import { IParticle, IParticleWithPoint, ParticleOptions } from './index';\nimport { getRandomInt } from '../heplers/number';\nimport { Easings, easing } from '../heplers/easing';\n\ntype Options = {\n    radius: number,\n    speed: number,\n    easing: Easings,\n} & ParticleOptions;\n\nenum StartPostions {\n    Left,\n    Top,\n    Right,\n    Bottom\n}\n\nclass FigureParticle implements IParticle, IParticleWithPoint {\n    private x: number;\n    private y: number;\n    private dx: number;\n    private dy: number;\n    private dt: number = 0;\n    private increase: number = Number((Math.PI * 2 / 100).toFixed(2));\n    private isTargetReached = false;\n    private readonly targetX;\n    private readonly targetY;\n    private readonly startX;\n    private readonly startY;\n    private readonly targetDistance;\n    private readonly endAngle = Number((Math.PI * 2).toFixed(2));\n    private readonly randomFactor = Math.random();\n\n    constructor(\n        private readonly bound: {\n            width: number,\n            height: number,\n        },\n        targetX: number,\n        targetY: number,\n        private readonly options: Options\n    ) {\n        const startPosition = getRandomInt(3);\n        const startPositionOffset = 100;\n\n        switch (startPosition) {\n            case StartPostions.Left:\n                this.x = 0 - startPositionOffset;\n                this.y = Number((getRandomInt(this.bound.height)).toFixed(2));\n                break;\n            case StartPostions.Top:\n                this.x = Number((getRandomInt(this.bound.width)).toFixed(2));\n                this.y = Number((this.bound.height).toFixed(2)) + startPositionOffset;\n                break;\n            case StartPostions.Right:\n                this.x = Number((this.bound.width).toFixed(2)) + startPositionOffset;\n                this.y = Number((getRandomInt(this.bound.height)).toFixed(2));\n                break;\n            case StartPostions.Bottom:\n                this.x = Number((getRandomInt(this.bound.width)).toFixed(2));\n                this.y = 0 - startPositionOffset;\n                break;\n        }\n\n        this.targetX = Number(targetX.toFixed(2));\n        this.targetY = Number(targetY.toFixed(2));\n\n        this.startX = this.x;\n        this.startY = this.y;\n\n        const deltaX = this.targetX - this.x;\n        const deltaY = this.targetY - this.y;\n        this.targetDistance = Math.sqrt(deltaX*deltaX + deltaY*deltaY);\n\n        this.dx = Number((this.targetDistance * 0.01).toFixed(2));\n        this.dy = Number((this.targetDistance * 0.01).toFixed(2));\n    }\n\n    draw(context: CanvasRenderingContext2D) {\n        this.x = Number(this.x.toFixed(2));\n        this.y = Number(this.y.toFixed(2));\n        context.fillStyle = this.options.color;\n        context.beginPath();\n        context.arc(\n            this.x,\n            this.y,\n            Math.round(this.options.radius),\n            0,\n            this.endAngle,\n            false\n        );\n        context.fill();\n        this.move();\n    }\n\n    getPoint(): { readonly x: number; readonly y: number } {\n        return {\n            x: this.x,\n            y: this.y,\n        }\n    }\n\n    private move() {\n        if (!this.isTargetReached) {\n            this.moveToTarget();\n        } else {\n            this.moveRandom();\n        }\n    }\n\n    private moveToTarget() {\n        const deltaX = this.targetX - this.startX;\n        const deltaY = this.targetY - this.startY;\n        const iterations = this.options.speed;\n\n        if (this.dt > iterations) {\n            this.isTargetReached = true;\n            return;\n        }\n\n        const deltaRemainX = deltaX * (this.dt / iterations);\n        const deltaRemainY = deltaY * (this.dt / iterations);\n\n        const dx = easing[this.options.easing](deltaRemainX / deltaX);\n        const dy = easing[this.options.easing](deltaRemainY / deltaY);\n\n        this.x = deltaX * dx + this.startX;\n        this.y = deltaY * dy + this.startY;\n\n        this.dt++;\n    }\n\n    private moveRandom() {\n        this.x += (this.targetX - Math.abs(this.x + this.dx * 2 * this.randomFactor * Math.sin(this.dt * 1))) / (this.dx * 1);\n        this.y += (this.targetY - Math.abs(this.y + this.dy * 2 * this.randomFactor * Math.sin(this.dt * 1))) / (this.dy * 1);\n        this.dt += this.increase;\n    }\n}\n\nexport {\n    FigureParticle,\n}\n","type PathList = [any][];\ntype SvgPoints = {\n    x: number,\n    y: number\n}[]\n\nfunction getPointsFromSvgPath(path: string, accuracyFactor = 0.05): SvgPoints {\n    accuracyFactor = Math.min(Math.max(accuracyFactor, 0), 1);\n    const absolutePath = getAbsolutePathList(getParsedSvgPath(path))\n        .reduce((path, list) => {\n            path += list.shift();\n            path += list.join(',');\n            return path;\n        }, '');\n    const points = [];\n    const svgPathElement = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    svgPathElement.setAttribute('d', absolutePath);\n    const step = svgPathElement.getTotalLength() * accuracyFactor;\n\n    for (let i = 0; i <= step + 1; i++) {\n        points.push(svgPathElement.getPointAtLength(svgPathElement.getTotalLength()/step * i));\n    }\n\n    return points;\n}\n\nfunction getNormalizedSvgPointsByViewPort(\n    points: SvgPoints,\n    bounds: number[],\n    maxX: number,\n    maxY: number,\n    scaleToViewPortFactor = 0.5,\n): {x: number, y: number}[] {\n    scaleToViewPortFactor = Math.min(Math.max(scaleToViewPortFactor, 0), 1);\n    const [\n        left,\n        top,\n        right,\n        bottom,\n    ] = bounds;\n\n    const width = right - Math.abs(left);\n    const height = bottom - Math.abs(top);\n    const scaleMap = {[width]: maxX, [height]: maxY};\n    const scaleRatio = scaleMap[Math.max(width, height)] / Math.max(width, height) * scaleToViewPortFactor;\n\n    const normalized = (a, b) => a - b;\n    const scale = (a) => a * scaleRatio;\n    const center = (a, b, c) => a + b/2 - c/2;\n\n    return points.map((point) => {\n        return {\n            x: center(scale(normalized(point.x, Math.abs(left))), maxX, width * scaleRatio),\n            y: center(scale(normalized(point.y, Math.abs(top))), maxY, height * scaleRatio),\n        }\n    });\n}\n\n// https://github.com/dy/svg-path-bounds/\n// [left, top, right, bottom]\nfunction getSvgPathBounds(path: string): number[] {\n    const commands = getAbsolutePathList(getParsedSvgPath(path));\n    const bounds = [Infinity, Infinity, -Infinity, -Infinity];\n\n    for (let i = 0, l = commands.length; i < l; i++) {\n        const points = commands[i].slice(1);\n\n        for (let j = 0; j < points.length; j += 2) {\n            if (points[j + 0] < bounds[0]) bounds[0] = points[j + 0];\n            if (points[j + 1] < bounds[1]) bounds[1] = points[j + 1];\n            if (points[j + 0] > bounds[2]) bounds[2] = points[j + 0];\n            if (points[j + 1] > bounds[3]) bounds[3] = points[j + 1];\n        }\n    }\n\n    return bounds;\n}\n\n// https://github.com/jkroso/parse-svg-path\nfunction getParsedSvgPath(path: any): PathList {\n    const numbersRegex = getParsedSvgPath.numbersRegex;\n    const segment = getParsedSvgPath.segmentRegex;\n    const typesMap = getParsedSvgPath.typesMap;\n    const data = [];\n\n    path.replace(segment, (_, command, args) => {\n        let type = command.toLowerCase();\n        const numbers = args.match(numbersRegex);\n        args = numbers ? numbers.map(Number) : [];\n\n        if (type == 'm' && args.length > 2) {\n            data.push([command].concat(args.splice(0, 2)));\n            type = 'l';\n            command = command == 'm' ? 'l' : 'L';\n        }\n\n        while (true) {\n            if (args.length == typesMap[type]) {\n                args.unshift(command);\n                return data.push(args);\n            }\n\n            if (args.length < typesMap[type]) {\n                throw new Error('malformed path data')\n            }\n\n            data.push([command].concat(args.splice(0, typesMap[type])));\n        }\n    });\n\n    return data;\n}\n\ngetParsedSvgPath.typesMap = {a: 7, c: 6, h: 1, l: 2, m: 2, q: 4, s: 4, t: 2, v: 1, z: 0};\ngetParsedSvgPath.segmentRegex = /([astvzqmhlc])([^astvzqmhlc]*)/ig;\ngetParsedSvgPath.numbersRegex = /-?[0-9]*\\.?[0-9]+(?:e[-+]?\\d+)?/ig;\n\n// https://github.com/jkroso/abs-svg-path\nfunction getAbsolutePathList(path): PathList {\n    let startX = 0;\n    let startY = 0;\n    let x = 0;\n    let y = 0;\n\n    return path.map((seg) => {\n        seg = seg.slice();\n        const type = seg[0];\n        const command = type.toUpperCase();\n\n        // is relative\n        if (type != command) {\n            seg[0] = command;\n            switch (type) {\n                case 'a':\n                    seg[6] += x;\n                    seg[7] += y;\n                    break;\n                case 'v':\n                    seg[1] += y;\n                    break;\n                case 'h':\n                    seg[1] += x;\n                    break;\n                default:\n                    for (let i = 1; i < seg.length; ) {\n                        seg[i++] += x;\n                        seg[i++] += y;\n                    }\n            }\n        }\n\n        // update cursor state\n        switch (command) {\n            case 'Z':\n                x = startX;\n                y = startY;\n                break;\n            case 'H':\n                x = seg[1];\n                break;\n            case 'V':\n                y = seg[1];\n                break;\n            case 'M':\n                x = startX = seg[1];\n                y = startY = seg[2];\n                break;\n            default:\n                x = seg[seg.length - 2];\n                y = seg[seg.length - 1];\n        }\n\n        return seg;\n    });\n}\n\nexport {\n    getPointsFromSvgPath,\n    getNormalizedSvgPointsByViewPort,\n    getSvgPathBounds,\n};\n","function isObject(value) {\n    if (typeof value === 'object' && value != null && !value.length && !(value instanceof Node)) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction deepMutableExtend<T1 extends object, T2 extends Partial<T1>>(target: T1, partial: T2) {\n    for (const [key, value] of Object.entries(partial)) {\n        if (!target.hasOwnProperty(key)) {\n            continue;\n        }\n\n        if (isObject(target[key]) && isObject(value)) {\n            target[key] = deepMutableExtend(target[key], value);\n            continue;\n        }\n\n        target[key] = value;\n    }\n\n    return target;\n}\n\nfunction shallowEqualArrays(arrA, arrB) {\n    if (arrA === arrB) {\n        return true;\n    }\n\n    if (!arrA || !arrB) {\n        return false;\n    }\n\n    const len = arrA.length;\n\n    if (arrB.length !== len) {\n        return false;\n    }\n\n    for (let i = 0; i < len; i++) {\n        if (arrA[i] !== arrB[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport {\n    deepMutableExtend,\n    shallowEqualArrays,\n};\n","import {shallowEqualArrays} from './object'\n\nfunction callWhenArgsChanged(fn, context) {\n    let prevArgs;\n\n    return function(...args) {\n        if(!shallowEqualArrays(prevArgs, args)) {\n            prevArgs = args;\n            return fn.apply(context || this, arguments);\n        }\n    };\n}\n\nexport {\n    callWhenArgsChanged,\n};\n","import {FigureParticle, IParticle} from './index'\nimport {getNormalizedSvgPointsByViewPort, getPointsFromSvgPath, getSvgPathBounds} from '../heplers/svg';\nimport {callWhenArgsChanged} from '../heplers/function';\nimport {Easings} from '../heplers/easing';\n\ntype Options = {\n    radius: number,\n    speed: number,\n    easing: Easings,\n    color: string,\n    accuracyFactor: number,\n    scaleToViewPortFactor: number,\n    paths: string[],\n};\n\nclass FigureParticles {\n    private particles: IParticle[] = [];\n\n    constructor(\n        private readonly context: CanvasRenderingContext2D,\n        private readonly bound: {\n            width: number,\n            height: number,\n        },\n        private readonly options: Options,\n    ) {\n        this.updateFigure = callWhenArgsChanged(this.updateFigure, this);\n        this.update();\n    }\n\n    draw(): void {\n        this.particles.map((particle) => {\n            particle.draw(this.context);\n        });\n    }\n\n    update(): void {\n        this.updateFigure(\n            this.options.paths,\n            this.options.accuracyFactor,\n            this.options.scaleToViewPortFactor,\n            this.bound.width,\n            this.bound.height,\n            this.options.speed,\n            this.options.easing,\n        );\n    }\n\n    getPoints(): {readonly x: number, readonly y: number}[] {\n        return this.particles.map((particle) => particle.getPoint())\n    }\n\n    private updateFigure(\n        paths: string[],\n        accuracyFactor: number,\n        scaleToViewPortFactor: number,\n        boundWidth: number,\n        boundHeight: number,\n        speed: number,\n        easing: Easings,\n    ): void {\n        this.particles = [];\n        const bounds = getSvgPathBounds(paths.join(' '));\n        const points = paths.reduce((points: {x: number, y: number}[], path) => {\n            points = [\n                ...points,\n                ...getNormalizedSvgPointsByViewPort(\n                    getPointsFromSvgPath(path, accuracyFactor),\n                    bounds,\n                    boundWidth,\n                    boundHeight,\n                    scaleToViewPortFactor,\n                )\n            ];\n            return points;\n        }, []);\n\n        for (let i = 0; i < points.length; i++) {\n            this.particles.push(\n                new FigureParticle(\n                    this.bound,\n                    points[i].x,\n                    points[i].y,\n                    this.options,\n                )\n            );\n        }\n    }\n}\n\nexport {\n    FigureParticles,\n}\n","import { ConnectionPoint } from '../Connections';\n\ninterface IConnection {\n    draw(\n        context: CanvasRenderingContext2D,\n        start: ConnectionPoint,\n        end: ConnectionPoint,\n        visibilityDistance: number,\n    ): void;\n}\n\ninterface IParticles {\n    draw(): void;\n    update(): void;\n    getPoints(): {readonly x: number, readonly y: number}[];\n}\n\ntype Options = {\n    backgroundVisibilityDistance: number,\n    figureVisibilityDistance: number,\n}\n\nclass ParticlesConnections {\n    constructor(\n        private readonly context: CanvasRenderingContext2D,\n        private readonly connections: IConnection,\n        private readonly backgroundParticles: IParticles,\n        private readonly figureParticles: IParticles,\n        private readonly options: Options,\n    ) {}\n\n    draw(): void {\n        this.backgroundParticles.draw();\n        this.figureParticles.draw();\n        this.drawPointsConnections(\n            this.backgroundParticles.getPoints(),\n            this.options.backgroundVisibilityDistance,\n        );\n        this.drawPointsConnections(\n            this.figureParticles.getPoints(),\n            this.options.figureVisibilityDistance,\n        );\n    }\n\n    update(): void {\n        this.backgroundParticles.update();\n        this.figureParticles.update();\n    }\n\n    private drawPointsConnections(\n        points: {readonly x: number, readonly y: number}[],\n        visibilityDistance: number,\n    ) {\n        for(let i = 0; i < points.length; i++) {\n            for(let j = i + 1; j < points.length; j++) {\n                const start = points[i];\n                const end = points[j];\n                this.connections.draw(this.context, start, end, visibilityDistance);\n            }\n        }\n    }\n}\n\nexport {\n    ParticlesConnections,\n}\n","interface IScene {\n    clear(): void;\n}\n\ninterface IParticlesConnections {\n    draw(): void;\n    update(): void;\n}\n\ninterface ILoop {\n    start(callback: () => void): void;\n    stop(): void;\n}\n\ntype Options = {\n    onBeforeRender?(): void,\n    onAfterRender?(): void,\n};\n\nclass ParticlesRenderLoop {\n    constructor(\n        scene: IScene,\n        private readonly loop: ILoop,\n        particlesConnections: IParticlesConnections,\n        options: Options,\n    ) {\n        this.loop.start(() => {\n            options?.onBeforeRender();\n            scene.clear();\n            particlesConnections.draw();\n            particlesConnections.update();\n            options?.onAfterRender();\n        })\n    }\n\n    public stop(): void {\n        this.loop.stop();\n    }\n}\n\nexport {\n    ParticlesRenderLoop,\n}\n","export * from './Particle';\nexport * from './BackgroundParticle';\nexport * from './BackgroundParticles';\nexport * from './FigureParticle';\nexport * from './FigureParticles';\nexport * from './ParticlesConnections';\nexport * from './ParticlesRenderLoop';\n","// https://css-tricks.com/converting-color-spaces-in-javascript/\nfunction hexToRGBA(h, alpha = 1) {\n    let r = '0';\n    let g = '0';\n    let b = '0';\n\n    // 3 digits\n    if (h.length == 4) {\n        r = \"0x\" + h[1] + h[1];\n        g = \"0x\" + h[2] + h[2];\n        b = \"0x\" + h[3] + h[3];\n\n    // 6 digits\n    } else if (h.length == 7) {\n        r = \"0x\" + h[1] + h[2];\n        g = \"0x\" + h[3] + h[4];\n        b = \"0x\" + h[5] + h[6];\n    }\n\n    return `rgba(${+r}, ${+g}, ${+b}, ${alpha})`;\n}\n\nexport {\n    hexToRGBA,\n}\n","import {hexToRGBA} from './string';\n\nexport type Point = {\n    x: number,\n    y: number,\n};\n\nexport function findDistance(\n    start: Point,\n    end: Point\n): number {\n    const dx = start.x - end.x;\n    const dy = start.y - end.y;\n    return Math.sqrt(dx*dx + dy*dy);\n}\n\nexport function getCalculatedColorByDistance(\n    distance: number,\n    visibilityDistance: number,\n    color: string,\n): string {\n    const alpha = 1 - distance/visibilityDistance;\n    return hexToRGBA(color, alpha);\n}\n","import {\n    findDistance,\n    getCalculatedColorByDistance,\n} from '../heplers/point';\n\ntype ConnectionPoint = {\n    x: number,\n    y: number,\n};\n\ntype Options = {\n    color: string,\n}\n\nclass Connection {\n    constructor(private readonly options: Options) {}\n\n    draw(\n        context: CanvasRenderingContext2D,\n        start: ConnectionPoint,\n        end: ConnectionPoint,\n        visibilityDistance: number,\n    ): void {\n        const distance = findDistance(start, end);\n\n        if (distance < visibilityDistance) {\n            context.beginPath();\n            context.strokeStyle = getCalculatedColorByDistance(distance, visibilityDistance, this.options.color);\n            context.moveTo(start.x, start.y);\n            context.lineTo(end.x, end.y);\n            context.stroke();\n            context.closePath();\n        }\n    }\n}\n\nexport {\n    Connection,\n    ConnectionPoint,\n}\n","export * from './Connection';\n","import { Options } from './Options';\nimport { Scene, SceneResizer } from './Scene';\nimport { Loop } from './Loop';\nimport {\n    FigureParticles,\n    BackgroundParticles,\n    ParticlesConnections,\n    ParticlesRenderLoop,\n} from './Particles';\nimport { Connection } from './Connections';\nimport { getRandomInt } from './heplers/number';\nimport { deepMutableExtend } from './heplers/object';\nimport { Easings } from './heplers/easing';\n\nclass Main {\n    private readonly options: Options = {\n        root: document.getElementById('particles'),\n        scene: {\n            backgroundColor: '#000',\n        },\n        particles: {\n            backgroundParticles: {\n                count: 100,\n                color: '#fff',\n                radius: getRandomInt(4, 2),\n            },\n            figure: {\n                paths: [],\n                color: '#f00',\n                radius: getRandomInt(4, 2),\n                accuracyFactor: 0.05,\n                scaleToViewPortFactor: 0.8,\n                easing: Easings.easeInCubic,\n                speed: 100,\n            }\n        },\n        connections: {\n            figureVisibilityDistance: 100,\n            backgroundVisibilityDistance: 100,\n            color: '#fff',\n        },\n        loop: {\n            onBeforeRender: () => {},\n            onAfterRender: () => {},\n        }\n    };\n\n    private loop: ParticlesRenderLoop;\n    private scene: Scene;\n    private sceneResizer: SceneResizer;\n\n    constructor(options: Partial<Options>) {\n        this.updateConfig(options);\n\n        this.scene = new Scene(this.options.root, 0, this.options.scene);\n        this.sceneResizer = new SceneResizer(this.scene);\n        this.loop = new ParticlesRenderLoop(\n            this.scene,\n            new Loop(),\n            new ParticlesConnections(\n                this.scene.context,\n                new Connection(this.options.connections),\n                new BackgroundParticles(\n                    this.scene.context,\n                    this.scene.size,\n                    this.options.particles.backgroundParticles,\n                ),\n                new FigureParticles(\n                    this.scene.context,\n                    this.scene.size,\n                    this.options.particles.figure,\n                ),\n                this.options.connections,\n            ),\n            this.options.loop,\n        );\n    }\n\n    public updateConfig(options: Partial<Options>): void {\n        deepMutableExtend(this.options, options);\n    }\n\n    public destroy(): void {\n        this.loop.stop();\n        this.scene.destroy();\n        this.sceneResizer.destroy();\n        this.loop = null;\n        this.scene = null;\n        this.sceneResizer = null;\n    }\n\n    static Easings = Easings\n}\n\n// @ts-ignore\nmodule.exports = Main;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}